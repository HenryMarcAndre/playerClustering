# -*- coding: utf-8 -*-
"""leafsClustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m2MP3yqT3CYR34H2DCVxLxl4ndbxSsvY
"""

import numpy as np
import pandas as pd 
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import seaborn as sns
from mpl_toolkits.mplot3d import Axes3D
import plotly.graph_objs as go
from plotly import tools
from plotly.subplots import make_subplots
import plotly.offline as py

data = pd.read_csv('skaters.csv')

data.head()

data2 = data.loc[data['situation']=='all']

twoD = data2.loc[:,["name",'team',"OnIce_F_xGoals","OnIce_A_xGoals","icetime"]]

twoD['per60'] = twoD['icetime']/3600
twoD.head()

twoD['xG/60'] = twoD["OnIce_F_xGoals"]/twoD['per60']
twoD.head()

twoD['xGA/60'] = twoD["OnIce_A_xGoals"]/twoD['per60']
twoD.head()

leafs = twoD[(twoD.team == 'TOR')]

km = KMeans(n_clusters=4)
km

y_predicted = km.fit_predict(leafs[['xG/60',"xGA/60"]])
y_predicted

leafs['cluster'] = y_predicted

names = leafs['name']
leafsXG = leafs['xG/60']
leafsXGA = leafs['xGA/60']

df0 = leafs[leafs.cluster==0]
df1 = leafs[leafs.cluster==1]
df2 = leafs[leafs.cluster==2]
df3 = leafs[leafs.cluster==3]
x = np.linspace(0,5,100)
y = x

plt_1 = plt.figure(figsize=(8, 8))
plt.scatter(df0['xG/60'],df0["xGA/60"],color = 'green')
plt.scatter(df1['xG/60'],df1["xGA/60"],color = 'blue')
plt.scatter(df2['xG/60'],df2["xGA/60"],color = 'red')
plt.scatter(df3['xG/60'],df3["xGA/60"],color = 'orange')

plt.plot(x,y,'--', color = 'black')
plt.xlim([0,5])
plt.ylim([0,5])

plt.legend(['+/-','elite','unreliable','good','safe'])
plt.title("Toronto Maple Leafs xG vs xGA When Player is On the Ice")
plt.xlabel("Expected Goals")
plt.ylabel("Expected Goals Against")

elite = leafs.loc[leafs['cluster']==0]
print(elite['name'])

good = leafs.loc[leafs['cluster']==2]
print(good['name'])

unreliable = leafs.loc[leafs['cluster']==1]
print(unreliable['name'])

safe  = leafs.loc[leafs['cluster']==3]
print(safe['name'])

